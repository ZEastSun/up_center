时间复杂度深入浅出
概述：
  时间复杂度是算法效率的一种度量。一般算法运行在机器上都会有运行时间，但往往因为外部因素使算法失去了其本身的优劣。
通过时间复杂度来衡量一个算法的效率是相对准确的，其将算法的基本操作(原操作)比成某一问题规模n的函数f(n),它的时间复杂度就是T(n)=O(f(n)),
算法的基本操作执行的次数和所消耗的时间成正比，所以算法的时间复杂度的计算可以粗浅的理解为该语句中算法的基本操作执行的次数是多少也可理解为
有多少层针对于基本操作的循环，一般时间复杂度有常数阶，线性阶，平方阶，对数阶，指数阶等。
下面地址中图片可以看出时间复杂度一般希望是多项式阶而不是指数阶。
https://baike.sogou.com/v105680.htm;jsessionid=520CE7DCB80E8DD7A53971F4F835BD16.n2

时间复杂度的计算还要和数据结构相结合，不同的数据结构针对同一问题得出的复杂度则不尽相同。
待续。。。
